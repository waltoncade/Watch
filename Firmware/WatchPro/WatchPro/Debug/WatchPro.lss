
WatchPro.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ae0  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00000ae0  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000008c  20000434  00000f14  00020434  2**2
                  ALLOC
  3 .stack        00001000  200004c0  00000fa0  00020434  2**0
                  ALLOC
  4 .ARM.attributes 0000002a  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  0002045e  2**0
                  CONTENTS, READONLY
  6 .debug_info   0000a715  00000000  00000000  000204b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000015c6  00000000  00000000  0002abcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00002569  00000000  00000000  0002c192  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000290  00000000  00000000  0002e6fb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000002e8  00000000  00000000  0002e98b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000034b5  00000000  00000000  0002ec73  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00007492  00000000  00000000  00032128  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000d717a  00000000  00000000  000395ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000007a4  00000000  00000000  00110734  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
   0:	c0 14 00 20 39 08 00 00 35 08 00 00 35 08 00 00     ... 9...5...5...
		if (cpu_irq_is_enabled()) {
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
  10:	35 08 00 00 35 08 00 00 35 08 00 00 00 00 00 00     5...5...5.......
	...
			cpu_irq_prev_interrupt_state = true;
  2c:	35 08 00 00 35 08 00 00 00 00 00 00 35 08 00 00     5...5.......5...
  3c:	bd 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     ....5...5...5...
  4c:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
  5c:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
  6c:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
  7c:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
  8c:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
  9c:	35 08 00 00 35 08 00 00 51 07 00 00 61 07 00 00     5...5...Q...a...
  ac:	75 07 00 00 89 07 00 00 9d 07 00 00 ad 07 00 00     u...............
  bc:	c1 07 00 00 d5 07 00 00 e9 07 00 00 f9 07 00 00     ................
  cc:	0d 08 00 00 21 08 00 00 35 08 00 00 35 08 00 00     ....!...5...5...
  dc:	c9 06 00 00 35 08 00 00 35 08 00 00 35 08 00 00     ....5...5...5...
  ec:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
  fc:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
 10c:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
 11c:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
 12c:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
 13c:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
 14c:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
 15c:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
 16c:	35 08 00 00 35 08 00 00 35 08 00 00 35 08 00 00     5...5...5...5...
 17c:	35 08 00 00                                         5...

00000180 <__do_global_dtors_aux>:
 180:	b510      	push	{r4, lr}
 182:	4c05      	ldr	r4, [pc, #20]	; (198 <__do_global_dtors_aux+0x18>)
 184:	7823      	ldrb	r3, [r4, #0]
 186:	b933      	cbnz	r3, 196 <__do_global_dtors_aux+0x16>
 188:	4b04      	ldr	r3, [pc, #16]	; (19c <__do_global_dtors_aux+0x1c>)
 18a:	b113      	cbz	r3, 192 <__do_global_dtors_aux+0x12>
 18c:	4804      	ldr	r0, [pc, #16]	; (1a0 <__do_global_dtors_aux+0x20>)
 18e:	f3af 8000 	nop.w
 192:	2301      	movs	r3, #1
 194:	7023      	strb	r3, [r4, #0]
 196:	bd10      	pop	{r4, pc}
 198:	20000434 	.word	0x20000434
 19c:	00000000 	.word	0x00000000
 1a0:	00000ae0 	.word	0x00000ae0

000001a4 <frame_dummy>:
 1a4:	4b0c      	ldr	r3, [pc, #48]	; (1d8 <frame_dummy+0x34>)
 1a6:	b143      	cbz	r3, 1ba <frame_dummy+0x16>
 1a8:	480c      	ldr	r0, [pc, #48]	; (1dc <frame_dummy+0x38>)
 1aa:	490d      	ldr	r1, [pc, #52]	; (1e0 <frame_dummy+0x3c>)
 1ac:	b510      	push	{r4, lr}
 1ae:	f3af 8000 	nop.w
 1b2:	480c      	ldr	r0, [pc, #48]	; (1e4 <frame_dummy+0x40>)
 1b4:	6803      	ldr	r3, [r0, #0]
 1b6:	b923      	cbnz	r3, 1c2 <frame_dummy+0x1e>
 1b8:	bd10      	pop	{r4, pc}
 1ba:	480a      	ldr	r0, [pc, #40]	; (1e4 <frame_dummy+0x40>)
 1bc:	6803      	ldr	r3, [r0, #0]
 1be:	b933      	cbnz	r3, 1ce <frame_dummy+0x2a>
 1c0:	4770      	bx	lr
 1c2:	4b09      	ldr	r3, [pc, #36]	; (1e8 <frame_dummy+0x44>)
 1c4:	2b00      	cmp	r3, #0
 1c6:	d0f7      	beq.n	1b8 <frame_dummy+0x14>
 1c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 1cc:	4718      	bx	r3
 1ce:	4b06      	ldr	r3, [pc, #24]	; (1e8 <frame_dummy+0x44>)
 1d0:	2b00      	cmp	r3, #0
 1d2:	d0f5      	beq.n	1c0 <frame_dummy+0x1c>
 1d4:	4718      	bx	r3
 1d6:	bf00      	nop
 1d8:	00000000 	.word	0x00000000
 1dc:	00000ae0 	.word	0x00000ae0
 1e0:	20000438 	.word	0x20000438
 1e4:	00000ae0 	.word	0x00000ae0
 1e8:	00000000 	.word	0x00000000

000001ec <sysclk_priv_enable_module>:
		break;

	case PDCA_ADDR:
		sysclk_disable_hsb_module(SYSCLK_PDCA_HSB);
		sysclk_disable_pbb_module(SYSCLK_PDCA_PB);
		break;
 1ec:	b470      	push	{r4, r5, r6}
	switch ((uintptr_t)module) {
 1ee:	b083      	sub	sp, #12
 1f0:	f3ef 8310 	mrs	r3, PRIMASK
 1f4:	fab3 f383 	clz	r3, r3
 1f8:	095b      	lsrs	r3, r3, #5
 1fa:	9301      	str	r3, [sp, #4]
 1fc:	b672      	cpsid	i
 1fe:	f3bf 8f5f 	dmb	sy
 202:	2200      	movs	r2, #0
 204:	4b0e      	ldr	r3, [pc, #56]	; (240 <sysclk_priv_enable_module+0x54>)
 206:	701a      	strb	r2, [r3, #0]
 208:	9d01      	ldr	r5, [sp, #4]
 * \brief Disable a module clock derived from the PBC clock
 * \param module_index Index of the module clock in the PBAMASK register
 */
static inline void sysclk_disable_pbc_module(uint32_t module_index)
{
	sysclk_priv_disable_module(PM_CLK_GRP_PBC, module_index);
 20a:	0083      	lsls	r3, r0, #2
 20c:	4c0d      	ldr	r4, [pc, #52]	; (244 <sysclk_priv_enable_module+0x58>)
 20e:	f854 6020 	ldr.w	r6, [r4, r0, lsl #2]
 212:	2201      	movs	r2, #1
 214:	fa02 f101 	lsl.w	r1, r2, r1
 218:	4331      	orrs	r1, r6
 21a:	3320      	adds	r3, #32
 21c:	f403 737f 	and.w	r3, r3, #1020	; 0x3fc
 220:	f043 432a 	orr.w	r3, r3, #2852126720	; 0xaa000000
 224:	4a08      	ldr	r2, [pc, #32]	; (248 <sysclk_priv_enable_module+0x5c>)
 226:	6593      	str	r3, [r2, #88]	; 0x58
 228:	f844 1020 	str.w	r1, [r4, r0, lsl #2]
 22c:	b12d      	cbz	r5, 23a <sysclk_priv_enable_module+0x4e>
 22e:	2201      	movs	r2, #1
 230:	4b03      	ldr	r3, [pc, #12]	; (240 <sysclk_priv_enable_module+0x54>)
 232:	701a      	strb	r2, [r3, #0]
 234:	f3bf 8f5f 	dmb	sy
 238:	b662      	cpsie	i
 23a:	b003      	add	sp, #12
 * \brief Disable a module clock derived from the PBD clock
 * \param module_index Index of the module clock in the PBAMASK register
 */
static inline void sysclk_disable_pbd_module(uint32_t module_index)
{
	sysclk_priv_disable_module(PM_CLK_GRP_PBD, module_index);
 23c:	bc70      	pop	{r4, r5, r6}
 23e:	4770      	bx	lr
 240:	20000000 	.word	0x20000000
 244:	400e0020 	.word	0x400e0020
		sysclk_disable_pba_module(SYSCLK_SPI);
 248:	400e0000 	.word	0x400e0000

0000024c <sysclk_enable_pba_module>:
 24c:	b530      	push	{r4, r5, lr}
		break;
 24e:	b083      	sub	sp, #12
		sysclk_disable_pba_module(SYSCLK_TC0);
 250:	4604      	mov	r4, r0
 252:	f3ef 8310 	mrs	r3, PRIMASK
		break;
 256:	fab3 f383 	clz	r3, r3
		sysclk_disable_pba_module(SYSCLK_TWIM0);
 25a:	095b      	lsrs	r3, r3, #5
 25c:	9301      	str	r3, [sp, #4]
		break;
 25e:	b672      	cpsid	i
		sysclk_disable_pba_module(SYSCLK_TWIM1);
 260:	f3bf 8f5f 	dmb	sy
 264:	2200      	movs	r2, #0
		break;
 266:	4b0c      	ldr	r3, [pc, #48]	; (298 <sysclk_enable_pba_module+0x4c>)
		sysclk_disable_pba_module(SYSCLK_TWIS1);
 268:	701a      	strb	r2, [r3, #0]
 26a:	9d01      	ldr	r5, [sp, #4]
 26c:	4b0b      	ldr	r3, [pc, #44]	; (29c <sysclk_enable_pba_module+0x50>)
		break;
 26e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
		sysclk_disable_pba_module(SYSCLK_USART1);
 270:	b163      	cbz	r3, 28c <sysclk_enable_pba_module+0x40>
 272:	b12d      	cbz	r5, 280 <sysclk_enable_pba_module+0x34>
 274:	2201      	movs	r2, #1
		break;
 276:	4b08      	ldr	r3, [pc, #32]	; (298 <sysclk_enable_pba_module+0x4c>)
		sysclk_disable_pba_module(SYSCLK_USART3);
 278:	701a      	strb	r2, [r3, #0]
 27a:	f3bf 8f5f 	dmb	sy
		break;
 27e:	b662      	cpsie	i
		sysclk_disable_pba_module(SYSCLK_ADCIFE);
 280:	4621      	mov	r1, r4
 282:	2002      	movs	r0, #2
 284:	4b06      	ldr	r3, [pc, #24]	; (2a0 <sysclk_enable_pba_module+0x54>)
		break;
 286:	4798      	blx	r3
		sysclk_disable_pba_module(SYSCLK_ACIFC);
 288:	b003      	add	sp, #12
 28a:	bd30      	pop	{r4, r5, pc}
 28c:	2105      	movs	r1, #5
		break;
 28e:	2001      	movs	r0, #1
		sysclk_disable_pba_module(SYSCLK_ABDACB);
 290:	4b03      	ldr	r3, [pc, #12]	; (2a0 <sysclk_enable_pba_module+0x54>)
 292:	4798      	blx	r3
 294:	e7ed      	b.n	272 <sysclk_enable_pba_module+0x26>
		break;
 296:	bf00      	nop
		sysclk_disable_pba_module(SYSCLK_TRNG);
 298:	20000000 	.word	0x20000000
 29c:	400e0000 	.word	0x400e0000
		sysclk_disable_pba_module(SYSCLK_CATB);
 2a0:	000001ed 	.word	0x000001ed

000002a4 <sysclk_enable_pbb_module>:
 2a4:	b530      	push	{r4, r5, lr}
		break;
 2a6:	b083      	sub	sp, #12
		sysclk_disable_pba_module(SYSCLK_TWIM3);
 2a8:	4604      	mov	r4, r0
 2aa:	f3ef 8310 	mrs	r3, PRIMASK
		break;
 2ae:	fab3 f383 	clz	r3, r3
 2b2:	095b      	lsrs	r3, r3, #5
 2b4:	9301      	str	r3, [sp, #4]
 2b6:	b672      	cpsid	i
 2b8:	f3bf 8f5f 	dmb	sy
 2bc:	2200      	movs	r2, #0
 2be:	4b0c      	ldr	r3, [pc, #48]	; (2f0 <sysclk_enable_pbb_module+0x4c>)
 2c0:	701a      	strb	r2, [r3, #0]
 2c2:	9d01      	ldr	r5, [sp, #4]
 2c4:	4b0b      	ldr	r3, [pc, #44]	; (2f4 <sysclk_enable_pbb_module+0x50>)
 2c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 2c8:	b163      	cbz	r3, 2e4 <sysclk_enable_pbb_module+0x40>
 2ca:	b12d      	cbz	r5, 2d8 <sysclk_enable_pbb_module+0x34>
 2cc:	2201      	movs	r2, #1
 2ce:	4b08      	ldr	r3, [pc, #32]	; (2f0 <sysclk_enable_pbb_module+0x4c>)
 2d0:	701a      	strb	r2, [r3, #0]
 2d2:	f3bf 8f5f 	dmb	sy
 2d6:	b662      	cpsie	i
 2d8:	4621      	mov	r1, r4
 2da:	2003      	movs	r0, #3
 2dc:	4b06      	ldr	r3, [pc, #24]	; (2f8 <sysclk_enable_pbb_module+0x54>)
 2de:	4798      	blx	r3
 2e0:	b003      	add	sp, #12
 2e2:	bd30      	pop	{r4, r5, pc}
 2e4:	2106      	movs	r1, #6
 2e6:	2001      	movs	r0, #1
 2e8:	4b03      	ldr	r3, [pc, #12]	; (2f8 <sysclk_enable_pbb_module+0x54>)
 2ea:	4798      	blx	r3
 2ec:	e7ed      	b.n	2ca <sysclk_enable_pbb_module+0x26>
 2ee:	bf00      	nop
 2f0:	20000000 	.word	0x20000000
 2f4:	400e0000 	.word	0x400e0000
 2f8:	000001ed 	.word	0x000001ed

000002fc <sysclk_enable_peripheral_clock>:
 2fc:	b508      	push	{r3, lr}
 2fe:	4ba8      	ldr	r3, [pc, #672]	; (5a0 <sysclk_enable_peripheral_clock+0x2a4>)
		sysclk_disable_pbb_module(SYSCLK_HFLASHC_REGS);
 300:	4298      	cmp	r0, r3
 302:	f000 8190 	beq.w	626 <sysclk_enable_peripheral_clock+0x32a>
		break;
 306:	d920      	bls.n	34a <sysclk_enable_peripheral_clock+0x4e>
		sysclk_disable_pbb_module(SYSCLK_HMATRIX);
 308:	4ba6      	ldr	r3, [pc, #664]	; (5a4 <sysclk_enable_peripheral_clock+0x2a8>)
 30a:	4298      	cmp	r0, r3
 30c:	f000 81af 	beq.w	66e <sysclk_enable_peripheral_clock+0x372>
	sysclk_priv_disable_module(PM_CLK_GRP_HSB, module_index);
 310:	f240 80ae 	bls.w	470 <sysclk_enable_peripheral_clock+0x174>
 314:	4ba4      	ldr	r3, [pc, #656]	; (5a8 <sysclk_enable_peripheral_clock+0x2ac>)
 316:	4298      	cmp	r0, r3

	case CRCCU_ADDR:
		sysclk_disable_hsb_module(SYSCLK_CRCCU_DATA);
		sysclk_disable_pbb_module(SYSCLK_CRCCU_REGS);
 318:	f000 81b8 	beq.w	68c <sysclk_enable_peripheral_clock+0x390>
 31c:	f240 80ed 	bls.w	4fa <sysclk_enable_peripheral_clock+0x1fe>
 320:	4ba2      	ldr	r3, [pc, #648]	; (5ac <sysclk_enable_peripheral_clock+0x2b0>)
 322:	4298      	cmp	r0, r3
 324:	f000 81bc 	beq.w	6a0 <sysclk_enable_peripheral_clock+0x3a4>
		break;

	case USBC_ADDR:
		sysclk_disable_hsb_module(SYSCLK_USBC_DATA);
		sysclk_disable_pbb_module(SYSCLK_USBC_REGS);
 328:	f200 8106 	bhi.w	538 <sysclk_enable_peripheral_clock+0x23c>
 32c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
	sysclk_priv_disable_module(PM_CLK_GRP_PBC, module_index);
 330:	4298      	cmp	r0, r3
 332:	f000 81b0 	beq.w	696 <sysclk_enable_peripheral_clock+0x39a>
 336:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 33a:	4298      	cmp	r0, r3
 33c:	f040 80fb 	bne.w	536 <sysclk_enable_peripheral_clock+0x23a>
 340:	2102      	movs	r1, #2
 342:	2005      	movs	r0, #5
 344:	4b9a      	ldr	r3, [pc, #616]	; (5b0 <sysclk_enable_peripheral_clock+0x2b4>)
 346:	4798      	blx	r3
 348:	bd08      	pop	{r3, pc}
 34a:	f5a3 2390 	sub.w	r3, r3, #294912	; 0x48000
	sysclk_priv_disable_module(PM_CLK_GRP_PBD, module_index);
 34e:	4298      	cmp	r0, r3
 350:	f000 811b 	beq.w	58a <sysclk_enable_peripheral_clock+0x28e>
 354:	d849      	bhi.n	3ea <sysclk_enable_peripheral_clock+0xee>
 356:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
 35a:	4298      	cmp	r0, r3
 35c:	f000 8109 	beq.w	572 <sysclk_enable_peripheral_clock+0x276>
 360:	d821      	bhi.n	3a6 <sysclk_enable_peripheral_clock+0xaa>
 362:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
 366:	4298      	cmp	r0, r3
 368:	f000 80f4 	beq.w	554 <sysclk_enable_peripheral_clock+0x258>
 36c:	d912      	bls.n	394 <sysclk_enable_peripheral_clock+0x98>
 36e:	4b91      	ldr	r3, [pc, #580]	; (5b4 <sysclk_enable_peripheral_clock+0x2b8>)
 370:	4298      	cmp	r0, r3
 372:	f000 80f3 	beq.w	55c <sysclk_enable_peripheral_clock+0x260>
 376:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
 37a:	4298      	cmp	r0, r3
 37c:	d112      	bne.n	3a4 <sysclk_enable_peripheral_clock+0xa8>
 37e:	2003      	movs	r0, #3
		sysclk_enable_pba_module(SYSCLK_TC1);
 380:	4b8d      	ldr	r3, [pc, #564]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 382:	4798      	blx	r3
 */
static inline void sysclk_enable_pba_divmask(uint32_t mask)
{
	uint32_t temp_mask;

	temp_mask = PM->PM_PBADIVMASK;
 384:	4b87      	ldr	r3, [pc, #540]	; (5a4 <sysclk_enable_peripheral_clock+0x2a8>)
 386:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask |= mask;
 388:	f042 0255 	orr.w	r2, r2, #85	; 0x55
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 38c:	498b      	ldr	r1, [pc, #556]	; (5bc <sysclk_enable_peripheral_clock+0x2c0>)
 38e:	6599      	str	r1, [r3, #88]	; 0x58
			| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBADIVMASK - (uint32_t)PM);
	PM->PM_PBADIVMASK = temp_mask;
 390:	641a      	str	r2, [r3, #64]	; 0x40
 392:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
 394:	f1b0 2f40 	cmp.w	r0, #1073758208	; 0x40004000
 398:	d103      	bne.n	3a2 <sysclk_enable_peripheral_clock+0xa6>
		sysclk_enable_pba_module(SYSCLK_IISC);
 39a:	2000      	movs	r0, #0
 39c:	4b86      	ldr	r3, [pc, #536]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 39e:	4798      	blx	r3
		break;
 3a0:	bd08      	pop	{r3, pc}
 3a2:	bd08      	pop	{r3, pc}
 3a4:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
 3a6:	4b86      	ldr	r3, [pc, #536]	; (5c0 <sysclk_enable_peripheral_clock+0x2c4>)
 3a8:	4298      	cmp	r0, r3
 3aa:	f000 80e6 	beq.w	57a <sysclk_enable_peripheral_clock+0x27e>
 3ae:	d912      	bls.n	3d6 <sysclk_enable_peripheral_clock+0xda>
 3b0:	4b84      	ldr	r3, [pc, #528]	; (5c4 <sysclk_enable_peripheral_clock+0x2c8>)
 3b2:	4298      	cmp	r0, r3
 3b4:	f000 80e5 	beq.w	582 <sysclk_enable_peripheral_clock+0x286>
 3b8:	f503 43f8 	add.w	r3, r3, #31744	; 0x7c00
 3bc:	4298      	cmp	r0, r3
 3be:	d113      	bne.n	3e8 <sysclk_enable_peripheral_clock+0xec>
		sysclk_enable_pba_module(SYSCLK_USART0);
 3c0:	2008      	movs	r0, #8
 3c2:	4b7d      	ldr	r3, [pc, #500]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 3c4:	4798      	blx	r3
	temp_mask = PM->PM_PBADIVMASK;
 3c6:	4b77      	ldr	r3, [pc, #476]	; (5a4 <sysclk_enable_peripheral_clock+0x2a8>)
 3c8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask |= mask;
 3ca:	f042 0204 	orr.w	r2, r2, #4
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 3ce:	497b      	ldr	r1, [pc, #492]	; (5bc <sysclk_enable_peripheral_clock+0x2c0>)
 3d0:	6599      	str	r1, [r3, #88]	; 0x58
	PM->PM_PBADIVMASK = temp_mask;
 3d2:	641a      	str	r2, [r3, #64]	; 0x40
 3d4:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
 3d6:	f5a3 5370 	sub.w	r3, r3, #15360	; 0x3c00
 3da:	4298      	cmp	r0, r3
 3dc:	d103      	bne.n	3e6 <sysclk_enable_peripheral_clock+0xea>
		sysclk_enable_pba_module(SYSCLK_TWIS0);
 3de:	2005      	movs	r0, #5
 3e0:	4b75      	ldr	r3, [pc, #468]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 3e2:	4798      	blx	r3
		break;
 3e4:	bd08      	pop	{r3, pc}
 3e6:	bd08      	pop	{r3, pc}
 3e8:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
 3ea:	4b77      	ldr	r3, [pc, #476]	; (5c8 <sysclk_enable_peripheral_clock+0x2cc>)
 3ec:	4298      	cmp	r0, r3
 3ee:	f000 810e 	beq.w	60e <sysclk_enable_peripheral_clock+0x312>
 3f2:	d822      	bhi.n	43a <sysclk_enable_peripheral_clock+0x13e>
 3f4:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
 3f8:	4298      	cmp	r0, r3
 3fa:	f000 80f9 	beq.w	5f0 <sysclk_enable_peripheral_clock+0x2f4>
 3fe:	d90b      	bls.n	418 <sysclk_enable_peripheral_clock+0x11c>
 400:	4b72      	ldr	r3, [pc, #456]	; (5cc <sysclk_enable_peripheral_clock+0x2d0>)
 402:	4298      	cmp	r0, r3
 404:	f000 80ff 	beq.w	606 <sysclk_enable_peripheral_clock+0x30a>
 408:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
 40c:	4298      	cmp	r0, r3
 40e:	d113      	bne.n	438 <sysclk_enable_peripheral_clock+0x13c>
		sysclk_enable_pba_module(SYSCLK_DACC);
 410:	200d      	movs	r0, #13
 412:	4b69      	ldr	r3, [pc, #420]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 414:	4798      	blx	r3
		break;
 416:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
 418:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
 41c:	4298      	cmp	r0, r3
 41e:	d10a      	bne.n	436 <sysclk_enable_peripheral_clock+0x13a>
		sysclk_enable_pba_module(SYSCLK_USART2);
 420:	200a      	movs	r0, #10
 422:	4b65      	ldr	r3, [pc, #404]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 424:	4798      	blx	r3
	temp_mask = PM->PM_PBADIVMASK;
 426:	4b5f      	ldr	r3, [pc, #380]	; (5a4 <sysclk_enable_peripheral_clock+0x2a8>)
 428:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask |= mask;
 42a:	f042 0204 	orr.w	r2, r2, #4
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 42e:	4963      	ldr	r1, [pc, #396]	; (5bc <sysclk_enable_peripheral_clock+0x2c0>)
 430:	6599      	str	r1, [r3, #88]	; 0x58
	PM->PM_PBADIVMASK = temp_mask;
 432:	641a      	str	r2, [r3, #64]	; 0x40
 434:	bd08      	pop	{r3, pc}
 436:	bd08      	pop	{r3, pc}
 438:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
 43a:	4b65      	ldr	r3, [pc, #404]	; (5d0 <sysclk_enable_peripheral_clock+0x2d4>)
 43c:	4298      	cmp	r0, r3
 43e:	f000 80ea 	beq.w	616 <sysclk_enable_peripheral_clock+0x31a>
 442:	d90b      	bls.n	45c <sysclk_enable_peripheral_clock+0x160>
 444:	4b63      	ldr	r3, [pc, #396]	; (5d4 <sysclk_enable_peripheral_clock+0x2d8>)
 446:	4298      	cmp	r0, r3
 448:	f000 80e9 	beq.w	61e <sysclk_enable_peripheral_clock+0x322>
 44c:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
 450:	4298      	cmp	r0, r3
 452:	d10c      	bne.n	46e <sysclk_enable_peripheral_clock+0x172>
		sysclk_enable_pba_module(SYSCLK_PARC);
 454:	2012      	movs	r0, #18
 456:	4b58      	ldr	r3, [pc, #352]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 458:	4798      	blx	r3
		break;
 45a:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
 45c:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
 460:	4298      	cmp	r0, r3
 462:	d103      	bne.n	46c <sysclk_enable_peripheral_clock+0x170>
		sysclk_enable_pba_module(SYSCLK_GLOC);
 464:	200f      	movs	r0, #15
 466:	4b54      	ldr	r3, [pc, #336]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 468:	4798      	blx	r3
		break;
 46a:	bd08      	pop	{r3, pc}
 46c:	bd08      	pop	{r3, pc}
 46e:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
 470:	f5a3 337c 	sub.w	r3, r3, #258048	; 0x3f000
 474:	4298      	cmp	r0, r3
 476:	f000 80e6 	beq.w	646 <sysclk_enable_peripheral_clock+0x34a>
 47a:	d81f      	bhi.n	4bc <sysclk_enable_peripheral_clock+0x1c0>
 47c:	f5a3 3314 	sub.w	r3, r3, #151552	; 0x25000
 480:	4298      	cmp	r0, r3
 482:	f000 80d4 	beq.w	62e <sysclk_enable_peripheral_clock+0x332>
 486:	d90f      	bls.n	4a8 <sysclk_enable_peripheral_clock+0x1ac>
 488:	4b53      	ldr	r3, [pc, #332]	; (5d8 <sysclk_enable_peripheral_clock+0x2dc>)
 48a:	4298      	cmp	r0, r3
 48c:	f000 80d3 	beq.w	636 <sysclk_enable_peripheral_clock+0x33a>
 490:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 494:	4298      	cmp	r0, r3
 496:	d110      	bne.n	4ba <sysclk_enable_peripheral_clock+0x1be>
	sysclk_priv_enable_module(PM_CLK_GRP_HSB, module_index);
 498:	2102      	movs	r1, #2
 49a:	2001      	movs	r0, #1
 49c:	4b44      	ldr	r3, [pc, #272]	; (5b0 <sysclk_enable_peripheral_clock+0x2b4>)
 49e:	4798      	blx	r3
		sysclk_enable_pbb_module(SYSCLK_HRAMC1_REGS);
 4a0:	2001      	movs	r0, #1
 4a2:	4b4e      	ldr	r3, [pc, #312]	; (5dc <sysclk_enable_peripheral_clock+0x2e0>)
 4a4:	4798      	blx	r3
		break;
 4a6:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
 4a8:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
 4ac:	4298      	cmp	r0, r3
 4ae:	d103      	bne.n	4b8 <sysclk_enable_peripheral_clock+0x1bc>
		sysclk_enable_pba_module(SYSCLK_TWIM2);
 4b0:	2015      	movs	r0, #21
 4b2:	4b41      	ldr	r3, [pc, #260]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 4b4:	4798      	blx	r3
		break;
 4b6:	bd08      	pop	{r3, pc}
 4b8:	bd08      	pop	{r3, pc}
 4ba:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
 4bc:	4b48      	ldr	r3, [pc, #288]	; (5e0 <sysclk_enable_peripheral_clock+0x2e4>)
 4be:	4298      	cmp	r0, r3
 4c0:	f000 80c5 	beq.w	64e <sysclk_enable_peripheral_clock+0x352>
 4c4:	d90b      	bls.n	4de <sysclk_enable_peripheral_clock+0x1e2>
 4c6:	4b47      	ldr	r3, [pc, #284]	; (5e4 <sysclk_enable_peripheral_clock+0x2e8>)
 4c8:	4298      	cmp	r0, r3
 4ca:	f000 80c8 	beq.w	65e <sysclk_enable_peripheral_clock+0x362>
 4ce:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 4d2:	4298      	cmp	r0, r3
 4d4:	d110      	bne.n	4f8 <sysclk_enable_peripheral_clock+0x1fc>
		sysclk_enable_pbb_module(SYSCLK_PEVC);
 4d6:	2006      	movs	r0, #6
 4d8:	4b40      	ldr	r3, [pc, #256]	; (5dc <sysclk_enable_peripheral_clock+0x2e0>)
 4da:	4798      	blx	r3
		break;
 4dc:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
 4de:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 4e2:	4298      	cmp	r0, r3
 4e4:	d107      	bne.n	4f6 <sysclk_enable_peripheral_clock+0x1fa>
 4e6:	2100      	movs	r1, #0
 4e8:	2001      	movs	r0, #1
 4ea:	4b31      	ldr	r3, [pc, #196]	; (5b0 <sysclk_enable_peripheral_clock+0x2b4>)
 4ec:	4798      	blx	r3
		sysclk_enable_pbb_module(SYSCLK_PDCA_PB);
 4ee:	2003      	movs	r0, #3
 4f0:	4b3a      	ldr	r3, [pc, #232]	; (5dc <sysclk_enable_peripheral_clock+0x2e0>)
 4f2:	4798      	blx	r3
		break;
 4f4:	bd08      	pop	{r3, pc}
 4f6:	bd08      	pop	{r3, pc}
 4f8:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
 4fa:	f5a3 4378 	sub.w	r3, r3, #63488	; 0xf800
 4fe:	4298      	cmp	r0, r3
 500:	f000 80ba 	beq.w	678 <sysclk_enable_peripheral_clock+0x37c>
 504:	d90c      	bls.n	520 <sysclk_enable_peripheral_clock+0x224>
 506:	4b38      	ldr	r3, [pc, #224]	; (5e8 <sysclk_enable_peripheral_clock+0x2ec>)
 508:	4298      	cmp	r0, r3
 50a:	f000 80ba 	beq.w	682 <sysclk_enable_peripheral_clock+0x386>
 50e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 512:	4298      	cmp	r0, r3
 514:	d10e      	bne.n	534 <sysclk_enable_peripheral_clock+0x238>
	sysclk_priv_enable_module(PM_CLK_GRP_PBC, module_index);
 516:	2104      	movs	r1, #4
 518:	4608      	mov	r0, r1
 51a:	4b25      	ldr	r3, [pc, #148]	; (5b0 <sysclk_enable_peripheral_clock+0x2b4>)
 51c:	4798      	blx	r3
 51e:	bd08      	pop	{r3, pc}
 520:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 524:	4298      	cmp	r0, r3
 526:	d104      	bne.n	532 <sysclk_enable_peripheral_clock+0x236>
 528:	2101      	movs	r1, #1
 52a:	2004      	movs	r0, #4
 52c:	4b20      	ldr	r3, [pc, #128]	; (5b0 <sysclk_enable_peripheral_clock+0x2b4>)
 52e:	4798      	blx	r3
 530:	bd08      	pop	{r3, pc}
 532:	bd08      	pop	{r3, pc}
 534:	bd08      	pop	{r3, pc}
 536:	bd08      	pop	{r3, pc}
 538:	4b2c      	ldr	r3, [pc, #176]	; (5ec <sysclk_enable_peripheral_clock+0x2f0>)
 53a:	4298      	cmp	r0, r3
 53c:	f000 80b5 	beq.w	6aa <sysclk_enable_peripheral_clock+0x3ae>
 540:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 544:	4298      	cmp	r0, r3
 546:	d104      	bne.n	552 <sysclk_enable_peripheral_clock+0x256>
	sysclk_priv_enable_module(PM_CLK_GRP_PBD, module_index);
 548:	2105      	movs	r1, #5
 54a:	4608      	mov	r0, r1
 54c:	4b18      	ldr	r3, [pc, #96]	; (5b0 <sysclk_enable_peripheral_clock+0x2b4>)
 54e:	4798      	blx	r3
 550:	bd08      	pop	{r3, pc}
 552:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_SPI);
 554:	2001      	movs	r0, #1
 556:	4b18      	ldr	r3, [pc, #96]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 558:	4798      	blx	r3
		break;
 55a:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_TC0);
 55c:	2002      	movs	r0, #2
 55e:	4b16      	ldr	r3, [pc, #88]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 560:	4798      	blx	r3
	temp_mask = PM->PM_PBADIVMASK;
 562:	4b10      	ldr	r3, [pc, #64]	; (5a4 <sysclk_enable_peripheral_clock+0x2a8>)
 564:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask |= mask;
 566:	f042 0255 	orr.w	r2, r2, #85	; 0x55
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 56a:	4914      	ldr	r1, [pc, #80]	; (5bc <sysclk_enable_peripheral_clock+0x2c0>)
 56c:	6599      	str	r1, [r3, #88]	; 0x58
	PM->PM_PBADIVMASK = temp_mask;
 56e:	641a      	str	r2, [r3, #64]	; 0x40
 570:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_TWIM0);
 572:	2004      	movs	r0, #4
 574:	4b10      	ldr	r3, [pc, #64]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 576:	4798      	blx	r3
		break;
 578:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_TWIM1);
 57a:	2006      	movs	r0, #6
 57c:	4b0e      	ldr	r3, [pc, #56]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 57e:	4798      	blx	r3
		break;
 580:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_TWIS1);
 582:	2007      	movs	r0, #7
 584:	4b0c      	ldr	r3, [pc, #48]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 586:	4798      	blx	r3
		break;
 588:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_USART1);
 58a:	2009      	movs	r0, #9
 58c:	4b0a      	ldr	r3, [pc, #40]	; (5b8 <sysclk_enable_peripheral_clock+0x2bc>)
 58e:	4798      	blx	r3
	temp_mask = PM->PM_PBADIVMASK;
 590:	4b04      	ldr	r3, [pc, #16]	; (5a4 <sysclk_enable_peripheral_clock+0x2a8>)
 592:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask |= mask;
 594:	f042 0204 	orr.w	r2, r2, #4
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 598:	4908      	ldr	r1, [pc, #32]	; (5bc <sysclk_enable_peripheral_clock+0x2c0>)
 59a:	6599      	str	r1, [r3, #88]	; 0x58
	PM->PM_PBADIVMASK = temp_mask;
 59c:	641a      	str	r2, [r3, #64]	; 0x40
 59e:	bd08      	pop	{r3, pc}
 5a0:	40070000 	.word	0x40070000
 5a4:	400e0000 	.word	0x400e0000
 5a8:	400f0000 	.word	0x400f0000
 5ac:	400f0c00 	.word	0x400f0c00
 5b0:	000001ed 	.word	0x000001ed
 5b4:	40010000 	.word	0x40010000
 5b8:	0000024d 	.word	0x0000024d
 5bc:	aa000040 	.word	0xaa000040
 5c0:	4001c000 	.word	0x4001c000
 5c4:	4001c400 	.word	0x4001c400
 5c8:	40040000 	.word	0x40040000
 5cc:	40038000 	.word	0x40038000
 5d0:	40064000 	.word	0x40064000
 5d4:	40068000 	.word	0x40068000
 5d8:	400a0000 	.word	0x400a0000
 5dc:	000002a5 	.word	0x000002a5
 5e0:	400a4000 	.word	0x400a4000
 5e4:	400a5000 	.word	0x400a5000
 5e8:	400e0c00 	.word	0x400e0c00
 5ec:	400f1000 	.word	0x400f1000
		sysclk_enable_pba_module(SYSCLK_USART3);
 5f0:	200b      	movs	r0, #11
 5f2:	4b30      	ldr	r3, [pc, #192]	; (6b4 <sysclk_enable_peripheral_clock+0x3b8>)
 5f4:	4798      	blx	r3
	temp_mask = PM->PM_PBADIVMASK;
 5f6:	4b30      	ldr	r3, [pc, #192]	; (6b8 <sysclk_enable_peripheral_clock+0x3bc>)
 5f8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask |= mask;
 5fa:	f042 0204 	orr.w	r2, r2, #4
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
 5fe:	492f      	ldr	r1, [pc, #188]	; (6bc <sysclk_enable_peripheral_clock+0x3c0>)
 600:	6599      	str	r1, [r3, #88]	; 0x58
	PM->PM_PBADIVMASK = temp_mask;
 602:	641a      	str	r2, [r3, #64]	; 0x40
 604:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_ADCIFE);
 606:	200c      	movs	r0, #12
 608:	4b2a      	ldr	r3, [pc, #168]	; (6b4 <sysclk_enable_peripheral_clock+0x3b8>)
 60a:	4798      	blx	r3
		break;
 60c:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_ACIFC);
 60e:	200e      	movs	r0, #14
 610:	4b28      	ldr	r3, [pc, #160]	; (6b4 <sysclk_enable_peripheral_clock+0x3b8>)
 612:	4798      	blx	r3
		break;
 614:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_ABDACB);
 616:	2010      	movs	r0, #16
 618:	4b26      	ldr	r3, [pc, #152]	; (6b4 <sysclk_enable_peripheral_clock+0x3b8>)
 61a:	4798      	blx	r3
		break;
 61c:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_TRNG);
 61e:	2011      	movs	r0, #17
 620:	4b24      	ldr	r3, [pc, #144]	; (6b4 <sysclk_enable_peripheral_clock+0x3b8>)
 622:	4798      	blx	r3
		break;
 624:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_CATB);
 626:	2013      	movs	r0, #19
 628:	4b22      	ldr	r3, [pc, #136]	; (6b4 <sysclk_enable_peripheral_clock+0x3b8>)
 62a:	4798      	blx	r3
		break;
 62c:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_TWIM3);
 62e:	2016      	movs	r0, #22
 630:	4b20      	ldr	r3, [pc, #128]	; (6b4 <sysclk_enable_peripheral_clock+0x3b8>)
 632:	4798      	blx	r3
		break;
 634:	bd08      	pop	{r3, pc}
	sysclk_priv_enable_module(PM_CLK_GRP_HSB, module_index);
 636:	2101      	movs	r1, #1
 638:	4608      	mov	r0, r1
 63a:	4b21      	ldr	r3, [pc, #132]	; (6c0 <sysclk_enable_peripheral_clock+0x3c4>)
 63c:	4798      	blx	r3
		sysclk_enable_pbb_module(SYSCLK_HFLASHC_REGS);
 63e:	2000      	movs	r0, #0
 640:	4b20      	ldr	r3, [pc, #128]	; (6c4 <sysclk_enable_peripheral_clock+0x3c8>)
 642:	4798      	blx	r3
		break;
 644:	bd08      	pop	{r3, pc}
		sysclk_enable_pbb_module(SYSCLK_HMATRIX);
 646:	2002      	movs	r0, #2
 648:	4b1e      	ldr	r3, [pc, #120]	; (6c4 <sysclk_enable_peripheral_clock+0x3c8>)
 64a:	4798      	blx	r3
		break;
 64c:	bd08      	pop	{r3, pc}
 64e:	2104      	movs	r1, #4
 650:	2001      	movs	r0, #1
 652:	4b1b      	ldr	r3, [pc, #108]	; (6c0 <sysclk_enable_peripheral_clock+0x3c4>)
 654:	4798      	blx	r3
		sysclk_enable_pbb_module(SYSCLK_CRCCU_REGS);
 656:	2004      	movs	r0, #4
 658:	4b1a      	ldr	r3, [pc, #104]	; (6c4 <sysclk_enable_peripheral_clock+0x3c8>)
 65a:	4798      	blx	r3
		break;
 65c:	bd08      	pop	{r3, pc}
 65e:	2103      	movs	r1, #3
 660:	2001      	movs	r0, #1
 662:	4b17      	ldr	r3, [pc, #92]	; (6c0 <sysclk_enable_peripheral_clock+0x3c4>)
 664:	4798      	blx	r3
		sysclk_enable_pbb_module(SYSCLK_USBC_REGS);
 666:	2005      	movs	r0, #5
 668:	4b16      	ldr	r3, [pc, #88]	; (6c4 <sysclk_enable_peripheral_clock+0x3c8>)
 66a:	4798      	blx	r3
		break;
 66c:	bd08      	pop	{r3, pc}
	sysclk_priv_enable_module(PM_CLK_GRP_PBC, module_index);
 66e:	2100      	movs	r1, #0
 670:	2004      	movs	r0, #4
 672:	4b13      	ldr	r3, [pc, #76]	; (6c0 <sysclk_enable_peripheral_clock+0x3c4>)
 674:	4798      	blx	r3
 676:	bd08      	pop	{r3, pc}
 678:	2102      	movs	r1, #2
 67a:	2004      	movs	r0, #4
 67c:	4b10      	ldr	r3, [pc, #64]	; (6c0 <sysclk_enable_peripheral_clock+0x3c4>)
 67e:	4798      	blx	r3
 680:	bd08      	pop	{r3, pc}
 682:	2103      	movs	r1, #3
 684:	2004      	movs	r0, #4
 686:	4b0e      	ldr	r3, [pc, #56]	; (6c0 <sysclk_enable_peripheral_clock+0x3c4>)
 688:	4798      	blx	r3
 68a:	bd08      	pop	{r3, pc}
	sysclk_priv_enable_module(PM_CLK_GRP_PBD, module_index);
 68c:	2100      	movs	r1, #0
 68e:	2005      	movs	r0, #5
 690:	4b0b      	ldr	r3, [pc, #44]	; (6c0 <sysclk_enable_peripheral_clock+0x3c4>)
 692:	4798      	blx	r3
 694:	bd08      	pop	{r3, pc}
 696:	2101      	movs	r1, #1
 698:	2005      	movs	r0, #5
 69a:	4b09      	ldr	r3, [pc, #36]	; (6c0 <sysclk_enable_peripheral_clock+0x3c4>)
 69c:	4798      	blx	r3
 69e:	bd08      	pop	{r3, pc}
 6a0:	2103      	movs	r1, #3
 6a2:	2005      	movs	r0, #5
 6a4:	4b06      	ldr	r3, [pc, #24]	; (6c0 <sysclk_enable_peripheral_clock+0x3c4>)
 6a6:	4798      	blx	r3
 6a8:	bd08      	pop	{r3, pc}
 6aa:	2104      	movs	r1, #4
 6ac:	2005      	movs	r0, #5
 6ae:	4b04      	ldr	r3, [pc, #16]	; (6c0 <sysclk_enable_peripheral_clock+0x3c4>)
 6b0:	4798      	blx	r3
 6b2:	bd08      	pop	{r3, pc}
 6b4:	0000024d 	.word	0x0000024d
 6b8:	400e0000 	.word	0x400e0000
 6bc:	aa000040 	.word	0xaa000040
 6c0:	000001ed 	.word	0x000001ed
 6c4:	000002a5 	.word	0x000002a5

000006c8 <AST_ALARM_Handler>:
/**
 * \brief Interrupt handler for AST alarm.
 */
#if defined(AST_ALARM_ENABLE) || defined(__DOXYGEN__)
void AST_ALARM_Handler(void)
{
 6c8:	b508      	push	{r3, lr}
	ast_callback_pointer[AST_INTERRUPT_ALARM]();
 6ca:	4b02      	ldr	r3, [pc, #8]	; (6d4 <AST_ALARM_Handler+0xc>)
 6cc:	681b      	ldr	r3, [r3, #0]
 6ce:	4798      	blx	r3
 6d0:	bd08      	pop	{r3, pc}
 6d2:	bf00      	nop
 6d4:	20000488 	.word	0x20000488

000006d8 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
 6d8:	4770      	bx	lr
	...

000006dc <gpio_common_handler>:

/**
 * Common GPIO handler.
 */
static void gpio_common_handler(uint32_t port_id, uint32_t port_mask)
{
 6dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 6e0:	b083      	sub	sp, #12
 6e2:	9101      	str	r1, [sp, #4]
	GpioPort *gpio_port = &(GPIO->GPIO_PORT[port_id]);
 6e4:	0247      	lsls	r7, r0, #9
 6e6:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 6ea:	f507 2761 	add.w	r7, r7, #921600	; 0xe1000
	uint32_t i;
	uint32_t int_flags;
	ioport_pin_t pin;

	int_flags = gpio_port->GPIO_IFR;
 6ee:	f8d7 a0d0 	ldr.w	sl, [r7, #208]	; 0xd0

	for (i = 0; i < gpio_nb_sources; i++) {
 6f2:	4b15      	ldr	r3, [pc, #84]	; (748 <gpio_common_handler+0x6c>)
 6f4:	681b      	ldr	r3, [r3, #0]
 6f6:	b1fb      	cbz	r3, 738 <gpio_common_handler+0x5c>
 6f8:	4606      	mov	r6, r0
 6fa:	4d14      	ldr	r5, [pc, #80]	; (74c <gpio_common_handler+0x70>)
 6fc:	2400      	movs	r4, #0
		pin = gpio_int_sources[i].pin;
 6fe:	46a9      	mov	r9, r5
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
 700:	f04f 0b01 	mov.w	fp, #1
	for (i = 0; i < gpio_nb_sources; i++) {
 704:	f8df 8040 	ldr.w	r8, [pc, #64]	; 748 <gpio_common_handler+0x6c>
 708:	e005      	b.n	716 <gpio_common_handler+0x3a>
 70a:	3401      	adds	r4, #1
 70c:	3508      	adds	r5, #8
 70e:	f8d8 3000 	ldr.w	r3, [r8]
 712:	42a3      	cmp	r3, r4
 714:	d910      	bls.n	738 <gpio_common_handler+0x5c>
		pin = gpio_int_sources[i].pin;
 716:	f859 3034 	ldr.w	r3, [r9, r4, lsl #3]
		if ((ioport_pin_to_port_id(pin) == port_id) &&
 71a:	ebb6 1f53 	cmp.w	r6, r3, lsr #5
 71e:	d1f4      	bne.n	70a <gpio_common_handler+0x2e>
 720:	f003 031f 	and.w	r3, r3, #31
 724:	fa0b f303 	lsl.w	r3, fp, r3
 728:	ea13 0f0a 	tst.w	r3, sl
 72c:	d0ed      	beq.n	70a <gpio_common_handler+0x2e>
				(ioport_pin_to_mask(pin) & int_flags)) {
			if (gpio_int_sources[i].callback != NULL) {
 72e:	686b      	ldr	r3, [r5, #4]
 730:	2b00      	cmp	r3, #0
 732:	d0ea      	beq.n	70a <gpio_common_handler+0x2e>
				gpio_int_sources[i].callback();
 734:	4798      	blx	r3
 736:	e7e8      	b.n	70a <gpio_common_handler+0x2e>
				Assert(false); /* Catch unexpected interrupt */
			}
		}
	}

	gpio_port->GPIO_IFRC = (int_flags & port_mask);
 738:	9b01      	ldr	r3, [sp, #4]
 73a:	ea0a 0303 	and.w	r3, sl, r3
 73e:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
}
 742:	b003      	add	sp, #12
 744:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 748:	20000480 	.word	0x20000480
 74c:	20000450 	.word	0x20000450

00000750 <GPIO_0_Handler>:

/**
 * GPIO handler 0 (PA 0..7)
 */
void GPIO_0_Handler(void)
{
 750:	b508      	push	{r3, lr}
	gpio_common_handler(IOPORT_GPIOA, GPIO_INT_GROUP_MASK);
 752:	21ff      	movs	r1, #255	; 0xff
 754:	2000      	movs	r0, #0
 756:	4b01      	ldr	r3, [pc, #4]	; (75c <GPIO_0_Handler+0xc>)
 758:	4798      	blx	r3
 75a:	bd08      	pop	{r3, pc}
 75c:	000006dd 	.word	0x000006dd

00000760 <GPIO_1_Handler>:

/**
 * GPIO handler 1 (PA 8..15)
 */
void GPIO_1_Handler(void)
{
 760:	b508      	push	{r3, lr}
	gpio_common_handler(IOPORT_GPIOA, (GPIO_INT_GROUP_MASK << 8));
 762:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 766:	2000      	movs	r0, #0
 768:	4b01      	ldr	r3, [pc, #4]	; (770 <GPIO_1_Handler+0x10>)
 76a:	4798      	blx	r3
 76c:	bd08      	pop	{r3, pc}
 76e:	bf00      	nop
 770:	000006dd 	.word	0x000006dd

00000774 <GPIO_2_Handler>:

/**
 * GPIO handler 2 (PA 16..23)
 */
void GPIO_2_Handler(void)
{
 774:	b508      	push	{r3, lr}
	gpio_common_handler(IOPORT_GPIOA, (GPIO_INT_GROUP_MASK << 16));
 776:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 77a:	2000      	movs	r0, #0
 77c:	4b01      	ldr	r3, [pc, #4]	; (784 <GPIO_2_Handler+0x10>)
 77e:	4798      	blx	r3
 780:	bd08      	pop	{r3, pc}
 782:	bf00      	nop
 784:	000006dd 	.word	0x000006dd

00000788 <GPIO_3_Handler>:

/**
 * GPIO handler 3 (PA 24..31)
 */
void GPIO_3_Handler(void)
{
 788:	b508      	push	{r3, lr}
	gpio_common_handler(IOPORT_GPIOA, (GPIO_INT_GROUP_MASK << 24));
 78a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 78e:	2000      	movs	r0, #0
 790:	4b01      	ldr	r3, [pc, #4]	; (798 <GPIO_3_Handler+0x10>)
 792:	4798      	blx	r3
 794:	bd08      	pop	{r3, pc}
 796:	bf00      	nop
 798:	000006dd 	.word	0x000006dd

0000079c <GPIO_4_Handler>:

/**
 * GPIO handler 4 (PB 0..7)
 */
void GPIO_4_Handler(void)
{
 79c:	b508      	push	{r3, lr}
	gpio_common_handler(IOPORT_GPIOB, GPIO_INT_GROUP_MASK);
 79e:	21ff      	movs	r1, #255	; 0xff
 7a0:	2001      	movs	r0, #1
 7a2:	4b01      	ldr	r3, [pc, #4]	; (7a8 <GPIO_4_Handler+0xc>)
 7a4:	4798      	blx	r3
 7a6:	bd08      	pop	{r3, pc}
 7a8:	000006dd 	.word	0x000006dd

000007ac <GPIO_5_Handler>:

/**
 * GPIO handler 5 (PB 8..15)
 */
void GPIO_5_Handler(void)
{
 7ac:	b508      	push	{r3, lr}
	gpio_common_handler(IOPORT_GPIOB, (GPIO_INT_GROUP_MASK << 8));
 7ae:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 7b2:	2001      	movs	r0, #1
 7b4:	4b01      	ldr	r3, [pc, #4]	; (7bc <GPIO_5_Handler+0x10>)
 7b6:	4798      	blx	r3
 7b8:	bd08      	pop	{r3, pc}
 7ba:	bf00      	nop
 7bc:	000006dd 	.word	0x000006dd

000007c0 <GPIO_6_Handler>:

/**
 * GPIO handler 6 (PB 16..23)
 */
void GPIO_6_Handler(void)
{
 7c0:	b508      	push	{r3, lr}
	gpio_common_handler(IOPORT_GPIOB, (GPIO_INT_GROUP_MASK << 16));
 7c2:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 7c6:	2001      	movs	r0, #1
 7c8:	4b01      	ldr	r3, [pc, #4]	; (7d0 <GPIO_6_Handler+0x10>)
 7ca:	4798      	blx	r3
 7cc:	bd08      	pop	{r3, pc}
 7ce:	bf00      	nop
 7d0:	000006dd 	.word	0x000006dd

000007d4 <GPIO_7_Handler>:

/**
 * GPIO handler 7 (PB 24..31)
 */
void GPIO_7_Handler(void)
{
 7d4:	b508      	push	{r3, lr}
	gpio_common_handler(IOPORT_GPIOB, (GPIO_INT_GROUP_MASK << 24));
 7d6:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 7da:	2001      	movs	r0, #1
 7dc:	4b01      	ldr	r3, [pc, #4]	; (7e4 <GPIO_7_Handler+0x10>)
 7de:	4798      	blx	r3
 7e0:	bd08      	pop	{r3, pc}
 7e2:	bf00      	nop
 7e4:	000006dd 	.word	0x000006dd

000007e8 <GPIO_8_Handler>:

/**
 * GPIO handler 8 (PC 0..7)
 */
void GPIO_8_Handler(void)
{
 7e8:	b508      	push	{r3, lr}
	gpio_common_handler(IOPORT_GPIOC, GPIO_INT_GROUP_MASK);
 7ea:	21ff      	movs	r1, #255	; 0xff
 7ec:	2002      	movs	r0, #2
 7ee:	4b01      	ldr	r3, [pc, #4]	; (7f4 <GPIO_8_Handler+0xc>)
 7f0:	4798      	blx	r3
 7f2:	bd08      	pop	{r3, pc}
 7f4:	000006dd 	.word	0x000006dd

000007f8 <GPIO_9_Handler>:

/**
 * GPIO handler 9 (PC 8..15)
 */
void GPIO_9_Handler(void)
{
 7f8:	b508      	push	{r3, lr}
	gpio_common_handler(IOPORT_GPIOC, (GPIO_INT_GROUP_MASK << 8));
 7fa:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 7fe:	2002      	movs	r0, #2
 800:	4b01      	ldr	r3, [pc, #4]	; (808 <GPIO_9_Handler+0x10>)
 802:	4798      	blx	r3
 804:	bd08      	pop	{r3, pc}
 806:	bf00      	nop
 808:	000006dd 	.word	0x000006dd

0000080c <GPIO_10_Handler>:

/**
 * GPIO handler 10 (PC 16..23)
 */
void GPIO_10_Handler(void)
{
 80c:	b508      	push	{r3, lr}
	gpio_common_handler(IOPORT_GPIOC, (GPIO_INT_GROUP_MASK << 16));
 80e:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 812:	2002      	movs	r0, #2
 814:	4b01      	ldr	r3, [pc, #4]	; (81c <GPIO_10_Handler+0x10>)
 816:	4798      	blx	r3
 818:	bd08      	pop	{r3, pc}
 81a:	bf00      	nop
 81c:	000006dd 	.word	0x000006dd

00000820 <GPIO_11_Handler>:

/**
 * GPIO handler 11 (PC 24..31)
 */
void GPIO_11_Handler(void)
{
 820:	b508      	push	{r3, lr}
	gpio_common_handler(IOPORT_GPIOC, (GPIO_INT_GROUP_MASK << 24));
 822:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 826:	2002      	movs	r0, #2
 828:	4b01      	ldr	r3, [pc, #4]	; (830 <GPIO_11_Handler+0x10>)
 82a:	4798      	blx	r3
 82c:	bd08      	pop	{r3, pc}
 82e:	bf00      	nop
 830:	000006dd 	.word	0x000006dd

00000834 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
 834:	e7fe      	b.n	834 <Dummy_Handler>
	...

00000838 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
 838:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
 83a:	4b17      	ldr	r3, [pc, #92]	; (898 <Reset_Handler+0x60>)
 83c:	4a17      	ldr	r2, [pc, #92]	; (89c <Reset_Handler+0x64>)
 83e:	429a      	cmp	r2, r3
 840:	d010      	beq.n	864 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
 842:	4b17      	ldr	r3, [pc, #92]	; (8a0 <Reset_Handler+0x68>)
 844:	4a14      	ldr	r2, [pc, #80]	; (898 <Reset_Handler+0x60>)
 846:	429a      	cmp	r2, r3
 848:	d20c      	bcs.n	864 <Reset_Handler+0x2c>
 84a:	3b01      	subs	r3, #1
 84c:	1a9b      	subs	r3, r3, r2
 84e:	f023 0303 	bic.w	r3, r3, #3
 852:	3304      	adds	r3, #4
 854:	4413      	add	r3, r2
 856:	4911      	ldr	r1, [pc, #68]	; (89c <Reset_Handler+0x64>)
			*pDest++ = *pSrc++;
 858:	f851 0b04 	ldr.w	r0, [r1], #4
 85c:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
 860:	429a      	cmp	r2, r3
 862:	d1f9      	bne.n	858 <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
 864:	4b0f      	ldr	r3, [pc, #60]	; (8a4 <Reset_Handler+0x6c>)
 866:	4a10      	ldr	r2, [pc, #64]	; (8a8 <Reset_Handler+0x70>)
 868:	429a      	cmp	r2, r3
 86a:	d20a      	bcs.n	882 <Reset_Handler+0x4a>
 86c:	3b01      	subs	r3, #1
 86e:	1a9b      	subs	r3, r3, r2
 870:	f023 0303 	bic.w	r3, r3, #3
 874:	3304      	adds	r3, #4
 876:	4413      	add	r3, r2
		*pDest++ = 0;
 878:	2100      	movs	r1, #0
 87a:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
 87e:	4293      	cmp	r3, r2
 880:	d1fb      	bne.n	87a <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) &_sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
 882:	4a0a      	ldr	r2, [pc, #40]	; (8ac <Reset_Handler+0x74>)
 884:	4b0a      	ldr	r3, [pc, #40]	; (8b0 <Reset_Handler+0x78>)
 886:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 88a:	6093      	str	r3, [r2, #8]

	/* Initialize the C library */
	__libc_init_array();
 88c:	4b09      	ldr	r3, [pc, #36]	; (8b4 <Reset_Handler+0x7c>)
 88e:	4798      	blx	r3

	/* Branch to main function */
	main();
 890:	4b09      	ldr	r3, [pc, #36]	; (8b8 <Reset_Handler+0x80>)
 892:	4798      	blx	r3
 894:	e7fe      	b.n	894 <Reset_Handler+0x5c>
 896:	bf00      	nop
 898:	20000000 	.word	0x20000000
 89c:	00000ae0 	.word	0x00000ae0
 8a0:	20000434 	.word	0x20000434
 8a4:	200004c0 	.word	0x200004c0
 8a8:	20000434 	.word	0x20000434
 8ac:	e000ed00 	.word	0xe000ed00
 8b0:	00000000 	.word	0x00000000
 8b4:	00000949 	.word	0x00000949
 8b8:	000008cd 	.word	0x000008cd

000008bc <SysTick_Handler>:
	}
}

void SysTick_Handler(void)
{
	ul_ms_ticks++;
 8bc:	4a02      	ldr	r2, [pc, #8]	; (8c8 <SysTick_Handler+0xc>)
 8be:	6813      	ldr	r3, [r2, #0]
 8c0:	3301      	adds	r3, #1
 8c2:	6013      	str	r3, [r2, #0]
 8c4:	4770      	bx	lr
 8c6:	bf00      	nop
 8c8:	20000484 	.word	0x20000484

000008cc <main>:
}

int main (void)
{
 8cc:	b508      	push	{r3, lr}
	//sysclk_init();
	board_init();
 8ce:	4b18      	ldr	r3, [pc, #96]	; (930 <main+0x64>)
 8d0:	4798      	blx	r3
}

__always_inline static void arch_ioport_init(void)
{
	sysclk_enable_peripheral_clock(GPIO);
 8d2:	4c18      	ldr	r4, [pc, #96]	; (934 <main+0x68>)
 8d4:	4620      	mov	r0, r4
 8d6:	4b18      	ldr	r3, [pc, #96]	; (938 <main+0x6c>)
 8d8:	4798      	blx	r3

__always_inline static void arch_ioport_set_port_dir(ioport_port_t port,
		ioport_port_mask_t mask, unsigned char group_direction)
{
	if (group_direction == IOPORT_DIR_OUTPUT) {
		arch_ioport_port_to_base(port)->GPIO_ODERS = mask;
 8da:	2304      	movs	r3, #4
 8dc:	6463      	str	r3, [r4, #68]	; 0x44
		// Always disable the Schmitt trigger for output pins.
		arch_ioport_port_to_base(port)->GPIO_STERC = mask;
 8de:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
		arch_ioport_port_to_base(port)->GPIO_ODERS = mask;
 8e2:	f44f 7300 	mov.w	r3, #512	; 0x200
 8e6:	6463      	str	r3, [r4, #68]	; 0x44
		arch_ioport_port_to_base(port)->GPIO_STERC = mask;
 8e8:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8ec:	4b13      	ldr	r3, [pc, #76]	; (93c <main+0x70>)
 8ee:	2272      	movs	r2, #114	; 0x72
 8f0:	605a      	str	r2, [r3, #4]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8f2:	21f0      	movs	r1, #240	; 0xf0
 8f4:	4a12      	ldr	r2, [pc, #72]	; (940 <main+0x74>)
 8f6:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8fa:	2200      	movs	r2, #0
 8fc:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8fe:	2207      	movs	r2, #7
 900:	601a      	str	r2, [r3, #0]
{
	volatile GpioPort *base = arch_ioport_port_to_base(port);
	if (level){
		base->GPIO_OVRS = mask;
	} else{
		base->GPIO_OVRC = mask;
 902:	4620      	mov	r0, r4
 904:	2504      	movs	r5, #4
 906:	462e      	mov	r6, r5
		base->GPIO_OVRS = mask;
 908:	f44f 7400 	mov.w	r4, #512	; 0x200
	ul_cur_ticks = ul_ms_ticks;
 90c:	4a0d      	ldr	r2, [pc, #52]	; (944 <main+0x78>)
		base->GPIO_OVRC = mask;
 90e:	6586      	str	r6, [r0, #88]	; 0x58
		base->GPIO_OVRS = mask;
 910:	6544      	str	r4, [r0, #84]	; 0x54
 912:	6811      	ldr	r1, [r2, #0]
	while ((ul_ms_ticks - ul_cur_ticks) < ul_dly_ticks) {
 914:	6813      	ldr	r3, [r2, #0]
 916:	1a5b      	subs	r3, r3, r1
 918:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 91c:	d3fa      	bcc.n	914 <main+0x48>
		base->GPIO_OVRC = mask;
 91e:	6584      	str	r4, [r0, #88]	; 0x58
		base->GPIO_OVRS = mask;
 920:	6545      	str	r5, [r0, #84]	; 0x54
	ul_cur_ticks = ul_ms_ticks;
 922:	6811      	ldr	r1, [r2, #0]
	while ((ul_ms_ticks - ul_cur_ticks) < ul_dly_ticks) {
 924:	6813      	ldr	r3, [r2, #0]
 926:	1a5b      	subs	r3, r3, r1
 928:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 92c:	d3fa      	bcc.n	924 <main+0x58>
 92e:	e7ee      	b.n	90e <main+0x42>
 930:	000006d9 	.word	0x000006d9
 934:	400e1000 	.word	0x400e1000
 938:	000002fd 	.word	0x000002fd
 93c:	e000e010 	.word	0xe000e010
 940:	e000ed00 	.word	0xe000ed00
 944:	20000484 	.word	0x20000484

00000948 <__libc_init_array>:
 948:	b570      	push	{r4, r5, r6, lr}
 94a:	4e0f      	ldr	r6, [pc, #60]	; (988 <__libc_init_array+0x40>)
 94c:	4d0f      	ldr	r5, [pc, #60]	; (98c <__libc_init_array+0x44>)
 94e:	1b76      	subs	r6, r6, r5
 950:	10b6      	asrs	r6, r6, #2
 952:	bf18      	it	ne
 954:	2400      	movne	r4, #0
 956:	d005      	beq.n	964 <__libc_init_array+0x1c>
 958:	3401      	adds	r4, #1
 95a:	f855 3b04 	ldr.w	r3, [r5], #4
 95e:	4798      	blx	r3
 960:	42a6      	cmp	r6, r4
 962:	d1f9      	bne.n	958 <__libc_init_array+0x10>
 964:	4e0a      	ldr	r6, [pc, #40]	; (990 <__libc_init_array+0x48>)
 966:	4d0b      	ldr	r5, [pc, #44]	; (994 <__libc_init_array+0x4c>)
 968:	1b76      	subs	r6, r6, r5
 96a:	f000 f8a7 	bl	abc <_init>
 96e:	10b6      	asrs	r6, r6, #2
 970:	bf18      	it	ne
 972:	2400      	movne	r4, #0
 974:	d006      	beq.n	984 <__libc_init_array+0x3c>
 976:	3401      	adds	r4, #1
 978:	f855 3b04 	ldr.w	r3, [r5], #4
 97c:	4798      	blx	r3
 97e:	42a6      	cmp	r6, r4
 980:	d1f9      	bne.n	976 <__libc_init_array+0x2e>
 982:	bd70      	pop	{r4, r5, r6, pc}
 984:	bd70      	pop	{r4, r5, r6, pc}
 986:	bf00      	nop
 988:	00000ac8 	.word	0x00000ac8
 98c:	00000ac8 	.word	0x00000ac8
 990:	00000ad0 	.word	0x00000ad0
 994:	00000ac8 	.word	0x00000ac8

00000998 <register_fini>:
 998:	4b02      	ldr	r3, [pc, #8]	; (9a4 <register_fini+0xc>)
 99a:	b113      	cbz	r3, 9a2 <register_fini+0xa>
 99c:	4802      	ldr	r0, [pc, #8]	; (9a8 <register_fini+0x10>)
 99e:	f000 b805 	b.w	9ac <atexit>
 9a2:	4770      	bx	lr
 9a4:	00000000 	.word	0x00000000
 9a8:	000009b9 	.word	0x000009b9

000009ac <atexit>:
 9ac:	2300      	movs	r3, #0
 9ae:	4601      	mov	r1, r0
 9b0:	461a      	mov	r2, r3
 9b2:	4618      	mov	r0, r3
 9b4:	f000 b81e 	b.w	9f4 <__register_exitproc>

000009b8 <__libc_fini_array>:
 9b8:	b538      	push	{r3, r4, r5, lr}
 9ba:	4c0a      	ldr	r4, [pc, #40]	; (9e4 <__libc_fini_array+0x2c>)
 9bc:	4d0a      	ldr	r5, [pc, #40]	; (9e8 <__libc_fini_array+0x30>)
 9be:	1b64      	subs	r4, r4, r5
 9c0:	10a4      	asrs	r4, r4, #2
 9c2:	d00a      	beq.n	9da <__libc_fini_array+0x22>
 9c4:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 9c8:	3b01      	subs	r3, #1
 9ca:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 9ce:	3c01      	subs	r4, #1
 9d0:	f855 3904 	ldr.w	r3, [r5], #-4
 9d4:	4798      	blx	r3
 9d6:	2c00      	cmp	r4, #0
 9d8:	d1f9      	bne.n	9ce <__libc_fini_array+0x16>
 9da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 9de:	f000 b877 	b.w	ad0 <_fini>
 9e2:	bf00      	nop
 9e4:	00000ae0 	.word	0x00000ae0
 9e8:	00000adc 	.word	0x00000adc

000009ec <__retarget_lock_acquire_recursive>:
 9ec:	4770      	bx	lr
 9ee:	bf00      	nop

000009f0 <__retarget_lock_release_recursive>:
 9f0:	4770      	bx	lr
 9f2:	bf00      	nop

000009f4 <__register_exitproc>:
 9f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 9f8:	4d2c      	ldr	r5, [pc, #176]	; (aac <__register_exitproc+0xb8>)
 9fa:	4606      	mov	r6, r0
 9fc:	6828      	ldr	r0, [r5, #0]
 9fe:	4698      	mov	r8, r3
 a00:	460f      	mov	r7, r1
 a02:	4691      	mov	r9, r2
 a04:	f7ff fff2 	bl	9ec <__retarget_lock_acquire_recursive>
 a08:	4b29      	ldr	r3, [pc, #164]	; (ab0 <__register_exitproc+0xbc>)
 a0a:	681c      	ldr	r4, [r3, #0]
 a0c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 a10:	2b00      	cmp	r3, #0
 a12:	d03e      	beq.n	a92 <__register_exitproc+0x9e>
 a14:	685a      	ldr	r2, [r3, #4]
 a16:	2a1f      	cmp	r2, #31
 a18:	dc1c      	bgt.n	a54 <__register_exitproc+0x60>
 a1a:	f102 0e01 	add.w	lr, r2, #1
 a1e:	b176      	cbz	r6, a3e <__register_exitproc+0x4a>
 a20:	eb03 0182 	add.w	r1, r3, r2, lsl #2
 a24:	2401      	movs	r4, #1
 a26:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 a2a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
 a2e:	4094      	lsls	r4, r2
 a30:	4320      	orrs	r0, r4
 a32:	2e02      	cmp	r6, #2
 a34:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
 a38:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 a3c:	d023      	beq.n	a86 <__register_exitproc+0x92>
 a3e:	3202      	adds	r2, #2
 a40:	f8c3 e004 	str.w	lr, [r3, #4]
 a44:	6828      	ldr	r0, [r5, #0]
 a46:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
 a4a:	f7ff ffd1 	bl	9f0 <__retarget_lock_release_recursive>
 a4e:	2000      	movs	r0, #0
 a50:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 a54:	4b17      	ldr	r3, [pc, #92]	; (ab4 <__register_exitproc+0xc0>)
 a56:	b30b      	cbz	r3, a9c <__register_exitproc+0xa8>
 a58:	f44f 70c8 	mov.w	r0, #400	; 0x190
 a5c:	f3af 8000 	nop.w
 a60:	4603      	mov	r3, r0
 a62:	b1d8      	cbz	r0, a9c <__register_exitproc+0xa8>
 a64:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
 a68:	6002      	str	r2, [r0, #0]
 a6a:	2100      	movs	r1, #0
 a6c:	6041      	str	r1, [r0, #4]
 a6e:	460a      	mov	r2, r1
 a70:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
 a74:	f04f 0e01 	mov.w	lr, #1
 a78:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
 a7c:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
 a80:	2e00      	cmp	r6, #0
 a82:	d0dc      	beq.n	a3e <__register_exitproc+0x4a>
 a84:	e7cc      	b.n	a20 <__register_exitproc+0x2c>
 a86:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
 a8a:	430c      	orrs	r4, r1
 a8c:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
 a90:	e7d5      	b.n	a3e <__register_exitproc+0x4a>
 a92:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
 a96:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 a9a:	e7bb      	b.n	a14 <__register_exitproc+0x20>
 a9c:	6828      	ldr	r0, [r5, #0]
 a9e:	f7ff ffa7 	bl	9f0 <__retarget_lock_release_recursive>
 aa2:	f04f 30ff 	mov.w	r0, #4294967295
 aa6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 aaa:	bf00      	nop
 aac:	20000430 	.word	0x20000430
 ab0:	00000ab8 	.word	0x00000ab8
 ab4:	00000000 	.word	0x00000000

00000ab8 <_global_impure_ptr>:
 ab8:	20000008                                ... 

00000abc <_init>:
 abc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 abe:	bf00      	nop
 ac0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 ac2:	bc08      	pop	{r3}
 ac4:	469e      	mov	lr, r3
 ac6:	4770      	bx	lr

00000ac8 <__init_array_start>:
 ac8:	00000999 	.word	0x00000999

00000acc <__frame_dummy_init_array_entry>:
 acc:	000001a5                                ....

00000ad0 <_fini>:
 ad0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 ad2:	bf00      	nop
 ad4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 ad6:	bc08      	pop	{r3}
 ad8:	469e      	mov	lr, r3
 ada:	4770      	bx	lr

00000adc <__fini_array_start>:
 adc:	00000181 	.word	0x00000181
